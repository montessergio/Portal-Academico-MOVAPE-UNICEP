<!DOCTYPE html>
<html lang="es">
<head>	
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Fundación MOVAPE/UNICEP - Acceso al Portal</title>
    <style>
        body {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            overflow-x: hidden;
            background: linear-gradient(135deg, #87CEEB 0%, #6B8E23 100%);
            min-height: 100vh;
        }

        .animated-bg {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
            overflow: hidden;
        }

        .sphere {
            position: absolute;
            border-radius: 50%;
            background: linear-gradient(45deg, rgba(255,255,255,0.1), rgba(255,255,255,0.3));
            backdrop-filter: blur(10px);
            animation: float 6s ease-in-out infinite;
        }

        .sphere:nth-child(1) { width: 80px; height: 80px; top: 20%; left: 10%; animation-delay: 0s; }
        .sphere:nth-child(2) { width: 120px; height: 120px; top: 60%; right: 15%; animation-delay: 2s; }
        .sphere:nth-child(3) { width: 60px; height: 60px; top: 80%; left: 20%; animation-delay: 4s; }
        .sphere:nth-child(4) { width: 100px; height: 100px; top: 30%; right: 30%; animation-delay: 1s; }
        .sphere:nth-child(5) { width: 90px; height: 90px; top: 10%; left: 60%; animation-delay: 3s; }

        @keyframes float {
            0%, 100% { transform: translateY(0px) rotate(0deg); }
            50% { transform: translateY(-20px) rotate(180deg); }
        }

        .container { position: relative; z-index: 1; min-height: 100vh; display: flex; flex-direction: column; }
        .login-section { flex: 1; display: flex; flex-direction: column; justify-content: center; align-items: center; padding: 2rem; text-align: center; }
        .dashboard-section { display: none; flex-direction: column; flex: 1; padding: 2rem; max-width: 1200px; margin: 0 auto; width: 100%; }
        .logo { background: rgba(255,255,255,0.9); padding: 2rem; border-radius: 20px; margin-bottom: 2rem; box-shadow: 0 10px 30px rgba(0,0,0,0.2); backdrop-filter: blur(10px); }
        .logo h1 { margin: 0; color: #2c5530; font-size: 2.5rem; font-weight: bold; }
        .logo p { margin: 0.5rem 0 0 0; color: #4682B4; font-size: 1.2rem; }
        .login-form { background: rgba(255,255,255,0.9); padding: 3rem; border-radius: 20px; box-shadow: 0 15px 40px rgba(0,0,0,0.2); backdrop-filter: blur(10px); max-width: 400px; width: 100%; margin-top: 2rem; }
        .login-form h2 { margin: 0 0 2rem 0; color: #2c5530; font-size: 1.8rem; }
        .form-group { margin-bottom: 1.5rem; text-align: left; }
        .form-group label { display: block; margin-bottom: 0.5rem; color: #2c5530; font-weight: bold; }
        .form-group input, .form-group select, .form-group textarea { width: 100%; padding: 1rem; border: 2px solid #e0e0e0; border-radius: 10px; font-size: 1rem; transition: all 0.3s ease; box-sizing: border-box; font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; }
        .form-group input:focus, .form-group select:focus, .form-group textarea:focus { outline: none; border-color: #4682B4; box-shadow: 0 0 10px rgba(70, 130, 180, 0.3); }
        .login-btn, .action-btn { width: 100%; background: linear-gradient(45deg, #87CEEB, #6B8E23); color: white; border: none; padding: 1rem; border-radius: 10px; font-size: 1.1rem; font-weight: bold; cursor: pointer; transition: all 0.3s ease; margin-top: 1rem; }
        .login-btn:hover, .action-btn:hover { transform: translateY(-2px); box-shadow: 0 10px 25px rgba(0,0,0,0.2); }
        .action-btn { width: auto; padding: 0.8rem 1.5rem; font-size: 1rem; }
        .demo-ids { background: rgba(255,255,255,0.8); padding: 1.5rem; border-radius: 15px; margin-top: 2rem; max-width: 400px; width: 100%; }
        .demo-ids h3 { margin: 0 0 1rem 0; color: #2c5530; font-size: 1.2rem; }
        .demo-id { display: flex; justify-content: space-between; align-items: center; padding: 0.5rem 0; border-bottom: 1px solid #eee; font-size: 0.9rem; }
        .demo-id:last-child { border-bottom: none; }
        .demo-id .id-code { font-weight: bold; color: #4682B4; cursor: pointer; }
        .demo-id .id-code:hover { text-decoration: underline; }
        .error-message { background: rgba(255, 0, 0, 0.1); color: #d32f2f; padding: 1rem; border-radius: 10px; margin-top: 1rem; border: 1px solid rgba(255, 0, 0, 0.3); display: none; }
        .dashboard-header { background: rgba(255,255,255,0.9); padding: 1.5rem; border-radius: 15px; margin-bottom: 2rem; display: flex; justify-content: space-between; align-items: center; backdrop-filter: blur(10px); flex-wrap: wrap; }
        .dashboard-header h2 { margin: 0; color: #2c5530; }
        .back-btn { background: linear-gradient(45deg, #87CEEB, #6B8E23); color: white; border: none; padding: 0.8rem 1.5rem; border-radius: 10px; cursor: pointer; font-weight: bold; transition: all 0.3s ease; }
        .back-btn:hover { transform: scale(1.05); box-shadow: 0 5px 15px rgba(0,0,0,0.2); }
        .dashboard-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 2rem; }
        .dashboard-card { background: rgba(255,255,255,0.9); padding: 2rem; border-radius: 15px; box-shadow: 0 5px 20px rgba(0,0,0,0.1); backdrop-filter: blur(10px); transition: all 0.3s ease; display: flex; flex-direction: column; }
        .dashboard-card:hover { transform: translateY(-3px); box-shadow: 0 10px 30px rgba(0,0,0,0.15); cursor: pointer; }
        .dashboard-card.non-clickable:hover { transform: none; box-shadow: 0 5px 20px rgba(0,0,0,0.1); cursor: default; }
        .dashboard-card h3 { margin: 0 0 1rem 0; color: #2c5530; display: flex; align-items: center; gap: 0.5rem; }
        .card-content { color: #666; line-height: 1.6; flex-grow: 1; }
        .grade-item, .schedule-item-summary, .subject-item, .material-item, .assignment-item { display: flex; justify-content: space-between; align-items: center; padding: 0.75rem 0; border-bottom: 1px solid #eee; }
        .grade-item:last-child, .schedule-item-summary:last-child, .subject-item:last-child, .material-item:last-child, .assignment-item:last-child { border-bottom: none; }
        .grade { font-weight: bold; color: #4682B4; }
        .schedule-item { background: linear-gradient(45deg, rgba(135,206,235,0.1), rgba(107,142,35,0.1)); padding: 1rem; border-radius: 8px; margin-bottom: 0.5rem; }
        .calendar-item { border-left: 4px solid #6B8E23; padding-left: 1rem; margin-bottom: 1rem; }
        .calendar-item.holiday { border-color: #d32f2f; }
        .calendar-item.event { border-color: #4682B4; }
        .calendar-item.exam { border-color: #ff9800; }
        .calendar-item strong { color: #2c5530; }
        .schedule-time { font-weight: bold; color: #2c5530; }
        .announcement { background: rgba(135,206,235,0.1); padding: 1rem; border-radius: 8px; margin-bottom: 1rem; border-left: 4px solid #4682B4; }
        .announcement:last-child { margin-bottom: 0; }
        .announcement-date { font-size: 0.9rem; color: #666; margin-bottom: 0.5rem; }
        table { width: 100%; border-collapse: collapse; margin-top: 1rem; }
        th, td { padding: 0.8rem; text-align: left; border-bottom: 1px solid #ddd; }
        th { background-color: rgba(107,142,35,0.1); color: #2c5530; }
        tr.clickable-row:hover { background-color: rgba(107,142,35,0.05); cursor: pointer; }
        .status-entregado { color: green; font-weight: bold; }
        .status-pendiente { color: orange; font-weight: bold; }
        .attendance-toggle { cursor: pointer; }
        .attendance-Presente { color: green; }
        .attendance-Ausente { color: red; }
        .attendance-Pendiente { color: grey; }
        @media (max-width: 768px) {
            .logo h1 { font-size: 2rem; }
            .login-form { padding: 2rem; margin: 1rem; }
            .dashboard-header { flex-direction: column; gap: 1rem; text-align: center; }
            .dashboard-grid { grid-template-columns: 1fr; }
        }
    </style>
</head>
<body>
    <div class="animated-bg">
        <div class="sphere"></div><div class="sphere"></div><div class="sphere"></div><div class="sphere"></div><div class="sphere"></div>
    </div>
    <div class="container">
                <div class="login-section" id="loginSection">
            <div class="logo">
                <h1>Fundación MOVAPE/UNICEP</h1>
                <p>Portal Universitario Digital</p>
            </div>
            <div class="login-form">
                <h2>🎓 Acceso al Portal</h2>
                <form id="loginForm" onsubmit="handleLogin(event)">
                    <div class="form-group">
                        <label for="userType">Tipo de Usuario:</label>
                        <select id="userType" required>
                            <option value="">Selecciona tu tipo</option>
                            <option value="student">Estudiante</option>
                            <option value="professor">Docente</option>
                            <option value="admin">Administrador</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="userId">ID de Usuario:</label>
                        <input type="text" id="userId" placeholder="Ingresa tu ID universitario" required>
                    </div>
                    <button type="submit" class="login-btn">Ingresar al Portal</button>
                </form>
                <div class="error-message" id="errorMessage">ID o tipo de usuario no válido. Por favor verifica tu información.</div>
            </div>
            <div class="demo-ids">
                <h3>🔍 IDs de Demostración</h3>
                <div class="demo-id"><span>Admin de Sistema:</span><span class="id-code" onclick="fillId('ADM-2024-001')">ADM-2024-001</span></div>
                <div class="demo-id"><span>María González - Ing. Industrial:</span><span class="id-code" onclick="fillId('EST-2024-001')">EST-2024-001</span></div>
                <div class="demo-id"><span>Carlos Ruiz - Administración:</span><span class="id-code" onclick="fillId('EST-2024-002')">EST-2024-002</span></div>
                <div class="demo-id"><span>Ana Sofía - Psicología:</span><span class="id-code" onclick="fillId('EST-2024-003')">EST-2024-003</span></div>
                <div class="demo-id"><span>Docente Dr. Ana Mendoza:</span><span class="id-code" onclick="fillId('PROF-2024-101')">PROF-2024-101</span></div>
                <div class="demo-id"><span>Docente Ing. Roberto Silva:</span><span class="id-code" onclick="fillId('PROF-2024-102')">PROF-2024-102</span></div>
            </div>
        </div>

                <div class="dashboard-section" id="mainDashboard">
            <div class="dashboard-header">
                <h2 id="dashboardTitle">Dashboard</h2>
                <button class="back-btn" onclick="logout()">🚪 Cerrar Sesión</button>
            </div>
            <div class="dashboard-grid" id="dashboardContent"></div>
        </div>

                <div class="dashboard-section" id="detailedSection">
            <div class="dashboard-header">
                <h2 id="sectionTitle">Sección Detallada</h2>
                <button class="back-btn" onclick="backToDashboard()">🔙 Volver al Dashboard</button>
            </div>
            <div id="sectionContent"></div>
        </div>
    </div>

    <script>
        // --- DATA ---
        let users = {
            'EST-2024-001': { type: 'student', name: 'María González', career: 'Ingeniería Industrial', semester: '3° Cuatrimestre', modality: 'Sabatina', grades: [{ subject: 'Matemáticas Aplicadas', grade: '8.5' }, { subject: 'Procesos Industriales', grade: '9.2' }, { subject: 'Física General', grade: '7.8' }], schedule: [{ time: '08:00 - 10:00', subject: 'Matemáticas Aplicadas', room: 'Aula 201', professor: 'Prof. Dr. Ana Mendoza', day: 'Sábado' }, { time: '10:30 - 12:30', subject: 'Procesos Industriales', room: 'Lab. Industrial', professor: 'Prof. Ing. Ana Rodríguez', day: 'Sábado' }, { time: '14:00 - 16:00', subject: 'Física General', room: 'Aula 105', professor: 'Prof. Ing. Roberto Silva', day: 'Sábado' }] },
            'EST-2024-002': { type: 'student', name: 'Carlos Ruiz', career: 'Administración de Empresas', semester: '5° Cuatrimestre', modality: 'Dominical', grades: [{ subject: 'Marketing Digital', grade: '9.1' }, { subject: 'Contabilidad Avanzada', grade: '8.7' }], schedule: [{ time: '09:00 - 11:00', subject: 'Marketing Digital', room: 'Aula 301', professor: 'Prof. Lic. Patricia López', day: 'Domingo' }] },
            'EST-2024-003': { type: 'student', name: 'Ana Sofía Herrera', career: 'Psicología', semester: '4° Cuatrimestre', modality: 'Sabatina', grades: [{ subject: 'Psicología Cognitiva', grade: '9.3' }, { subject: 'Neuropsicología', grade: '8.8' }], schedule: [{ time: '08:00 - 10:00', subject: 'Psicología Cognitiva', room: 'Aula 301', professor: 'Prof. Dra. Carmen Vásquez', day: 'Sábado' }] },
            'PROF-2024-101': { type: 'professor', name: 'Dr. Ana Mendoza', department: 'Facultad de Ingeniería', subjects: ['Matemáticas Aplicadas', 'Cálculo Diferencial'], classes: [{ subject: 'Matemáticas Aplicadas', room: 'Aula 201', students: ['EST-2024-001', 'EST-2024-003'] }, { subject: 'Cálculo Diferencial', room: 'Aula 203', students: ['EST-2024-002'] }] },
            'PROF-2024-102': { type: 'professor', name: 'Ing. Roberto Silva', department: 'Facultad de Ciencias', subjects: ['Física General', 'Física Aplicada'], classes: [{ subject: 'Física General', room: 'Aula 105', students: ['EST-2024-001'] }, { subject: 'Física Aplicada', room: 'Lab. Física', students: ['EST-2024-001'] }] },
            'ADM-2024-001': { type: 'admin', name: 'Admin de Sistema', department: 'Administración Central' }
        };
        
        // --- MODIFICADO: Se usa 'let' para permitir que el admin añada eventos ---
        let schoolCalendar = [
            { date: '2025-09-01', description: 'Inicio de Cuatrimestre Sep-Dic 2025', type: 'event' },
            { date: '2025-09-16', description: 'Día de la Independencia', type: 'holiday' },
            { date: '2025-10-27', description: 'Inicio de Primer Parcial', type: 'exam' },
            { date: '2025-11-02', description: 'Día de Muertos', type: 'holiday' },
            { date: '2025-11-20', description: 'Aniversario de la Revolución', type: 'holiday' },
            { date: '2025-12-08', description: 'Inicio de Segundo Parcial', type: 'exam' },
            { date: '2025-12-19', description: 'Fin de Cuatrimestre Sep-Dic 2025', type: 'event' },
        ];
        
        // --- El resto de los datos permanece igual ---
        let academicMaterials = { 'Matemáticas Aplicadas': [{ title: 'Cálculo Diferencial e Integral', type: 'PDF', size: '2.5 MB' }], 'Física General': [{ title: 'Manual de Laboratorio de Física', type: 'PDF', size: '3.1 MB' }] };
        let assignments = { 'Matemáticas Aplicadas': [{ title: 'Tarea 1: Derivadas', dueDate: '2025-10-15', submissions: { 'EST-2024-001': {status: 'Entregado'}, 'EST-2024-003': {status: 'Pendiente'} } }], 'Física General': [{ title: 'Reporte de Práctica 1', dueDate: '2025-10-20', submissions: { 'EST-2024-001': {status: 'Entregado', grade: 9.5} } }] };
        
        let currentUserId = null;
        const loginSection = document.getElementById('loginSection');
        const mainDashboard = document.getElementById('mainDashboard');
        const detailedSection = document.getElementById('detailedSection');
        const dashboardTitle = document.getElementById('dashboardTitle');
        const dashboardContent = document.getElementById('dashboardContent');
        const sectionTitle = document.getElementById('sectionTitle');
        const sectionContent = document.getElementById('sectionContent');
        const errorMessage = document.getElementById('errorMessage');
        const loginForm = document.getElementById('loginForm');

        function fillId(id) {
            document.getElementById('userId').value = id;
            if (id.startsWith('EST-')) document.getElementById('userType').value = 'student';
            else if (id.startsWith('PROF-')) document.getElementById('userType').value = 'professor';
            else if (id.startsWith('ADM-')) document.getElementById('userType').value = 'admin';
        }

        function handleLogin(event) {
            event.preventDefault();
            const userIdInput = document.getElementById('userId').value;
            const userTypeInput = document.getElementById('userType').value;
            const user = users[userIdInput];
            if (user && user.type === userTypeInput) {
                currentUserId = userIdInput;
                loginSection.style.display = 'none';
                mainDashboard.style.display = 'flex';
                errorMessage.style.display = 'none';
                if (user.type === 'student') populateStudentDashboard(user);
                else if (user.type === 'professor') populateProfessorDashboard(user);
                else if (user.type === 'admin') populateAdminDashboard(user);
            } else {
                errorMessage.style.display = 'block';
            }
        }

        function logout() {
            currentUserId = null;
            loginSection.style.display = 'flex';
            mainDashboard.style.display = 'none';
            detailedSection.style.display = 'none';
            loginForm.reset();
        }

        function backToDashboard() {
            detailedSection.style.display = 'none';
            mainDashboard.style.display = 'flex';
            const user = users[currentUserId];
            if (user.type === 'student') populateStudentDashboard(user);
            else if (user.type === 'professor') populateProfessorDashboard(user);
            else if (user.type === 'admin') populateAdminDashboard(user);
        }
        
        // --- MODIFICADO: Se añade el Dashboard del Administrador ---
        function populateAdminDashboard(user) {
            dashboardTitle.textContent = `Panel de Administración`;
            dashboardContent.innerHTML = `
                <div class="dashboard-card non-clickable">
                    <h3>⚙️ Info del Sistema</h3>
                    <div class="card-content">
                        <p><strong>Usuario:</strong> ${user.name}</p>
                        <p><strong>Departamento:</strong> ${user.department}</p>
                    </div>
                </div>
                <div class="dashboard-card">
                    <h3>📢 Comunicados Generales</h3>
                    <div class="card-content"><p>Gestionar los anuncios para toda la institución.</p></div>
                </div>
                <div class="dashboard-card" onclick="showDetailedView('adminCalendar')">
                    <h3>🗓️ Gestionar Calendario</h3>
                    <div class="card-content"><p>Añadir y modificar eventos, festivos y exámenes.</p></div>
                </div>
                <div class="dashboard-card">
                    <h3>👥 Gestión de Usuarios</h3>
                    <div class="card-content"><p>Administrar altas, bajas y cambios de usuarios.</p></div>
                </div>
            `;
        }

        function populateStudentDashboard(user) {
            dashboardTitle.textContent = `Bienvenido, ${user.name}`;
            dashboardContent.innerHTML = `
                <div class="dashboard-card non-clickable"><h3>🧑‍🎓 Info Estudiante</h3><div class="card-content"><p><strong>Carrera:</strong> ${user.career}</p><p><strong>Cuatrimestre:</strong> ${user.semester}</p></div></div>
                <div class="dashboard-card" onclick="showDetailedView('studentGrades')"><h3>📊 Mis Calificaciones</h3><div class="card-content">${user.grades.map(g => `<div class="grade-item"><span>${g.subject}</span><span class="grade">${g.grade}</span></div>`).join('')}<p style="margin-top:1rem;">Ver todas...</p></div></div>
                <div class="dashboard-card" onclick="showDetailedView('studentSchedule')"><h3>🗓️ Mi Horario</h3><div class="card-content">${user.schedule.slice(0, 2).map(s => `<div class="schedule-item-summary"><span>${s.subject}</span><span class="schedule-time">${s.time}</span></div>`).join('')}<p style="margin-top:1rem;">Ver completo...</p></div></div>
                <div class="dashboard-card" onclick="showDetailedView('schoolCalendar')">
                    <h3>📅 Calendario Escolar</h3>
                    <div class="card-content">
                        ${schoolCalendar.slice(0, 2).map(e => `<div class="calendar-item ${e.type}"><strong>${e.date}:</strong> ${e.description}</div>`).join('')}
                        <p style="margin-top: 1rem;">Ver calendario completo...</p>
                    </div>
                </div>
            `;
        }

        function populateProfessorDashboard(user) {
            dashboardTitle.textContent = `Bienvenido, ${user.name}`;
            dashboardContent.innerHTML = `
                <div class="dashboard-card non-clickable"><h3>🧑‍🏫 Info Docente</h3><div class="card-content"><p><strong>Departamento:</strong> ${user.department}</p></div></div>
                <div class="dashboard-card" onclick="showDetailedView('professorClasses')"><h3>📚 Gestionar Clases</h3><div class="card-content">${user.classes.map(c => `<div class="schedule-item-summary"><span>${c.subject}</span><span>${c.students.length} estudiantes</span></div>`).join('')}<p style="margin-top: 1rem;">Seleccionar clase...</p></div></div>
                <div class="dashboard-card" onclick="showDetailedView('schoolCalendar')">
                    <h3>📅 Calendario Escolar</h3>
                    <div class="card-content">
                         <p>Consulta los eventos institucionales, días festivos y periodos de exámenes.</p>
                    </div>
                </div>
            `;
        }
        
        function showDetailedView(view) {
            const user = users[currentUserId];
            mainDashboard.style.display = 'none';
            detailedSection.style.display = 'flex';
            
            // --- MODIFICADO: Se añaden los nuevos casos para el calendario ---
            switch (view) {
                case 'studentGrades':
                    sectionTitle.textContent = '📊 Mis Calificaciones';
                    sectionContent.innerHTML = `<div class="dashboard-card non-clickable">${user.grades.map(g => `<div class="grade-item"><span>${g.subject}</span><span class="grade">${g.grade}</span></div>`).join('')}</div>`;
                    break;
                case 'studentSchedule':
                    sectionTitle.textContent = '🗓️ Mi Horario';
                    sectionContent.innerHTML = `<div class="dashboard-card non-clickable">${user.schedule.map(s => `<div class="schedule-item"><strong>${s.subject}</strong><br>${s.time} (${s.day})<br>${s.room} - ${s.professor}</div>`).join('')}</div>`;
                    break;
                case 'professorClasses':
                    sectionTitle.textContent = '📚 Gestionar Clases';
                    sectionContent.innerHTML = `<div class="dashboard-card non-clickable"><h3>Selecciona una clase para ver detalles:</h3>${user.classes.map(c => `<div class="subject-item">${c.subject}</div>`).join('')}</div>`;
                    break;
                case 'adminCalendar': // Nuevo caso para el admin
                    renderAdminCalendar();
                    break;
                case 'schoolCalendar': // Nuevo caso para estudiantes y docentes
                    renderSchoolCalendar();
                    break;
            }
        }
        
        // --- NUEVA FUNCIÓN: Renderiza la vista de gestión de calendario para el admin ---
        function renderAdminCalendar() {
            sectionTitle.textContent = '🗓️ Gestionar Calendario y Eventos';
            schoolCalendar.sort((a, b) => new Date(a.date) - new Date(b.date));

            let eventListHTML = schoolCalendar.map(item => `
                <div class="calendar-item ${item.type}">
                    <strong>${item.date}:</strong> ${item.description}
                </div>
            `).join('');

            sectionContent.innerHTML = `
                <div class="dashboard-grid">
                    <div class="dashboard-card non-clickable">
                        <h3>➕ Añadir Nuevo Evento</h3>
                        <div class="card-content">
                            <form id="addEventForm" onsubmit="addCalendarEvent(event)">
                                <div class="form-group">
                                    <label for="eventDate">Fecha:</label>
                                    <input type="date" id="eventDate" required>
                                </div>
                                <div class="form-group">
                                    <label for="eventDescription">Descripción:</label>
                                    <textarea id="eventDescription" rows="3" placeholder="Ej: Suspensión de labores" required></textarea>
                                </div>
                                <div class="form-group">
                                    <label for="eventType">Tipo de Evento:</label>
                                    <select id="eventType" required>
                                        <option value="event">Evento General</option>
                                        <option value="holiday">Día Festivo</option>
                                        <option value="exam">Periodo de Examen</option>
                                    </select>
                                </div>
                                <button type="submit" class="action-btn">Añadir Evento</button>
                            </form>
                        </div>
                    </div>
                    <div class="dashboard-card non-clickable">
                        <h3>🗓️ Calendario Actual</h3>
                        <div class="card-content" id="eventListContainer">
                            ${eventListHTML}
                        </div>
                    </div>
                </div>
            `;
        }

        // --- NUEVA FUNCIÓN: Añade un evento al array schoolCalendar ---
        function addCalendarEvent(event) {
            event.preventDefault();
            const date = document.getElementById('eventDate').value;
            const description = document.getElementById('eventDescription').value;
            const type = document.getElementById('eventType').value;

            if (date && description && type) {
                schoolCalendar.push({ date, description, type });
                document.getElementById('addEventForm').reset(); // Limpia el formulario
                renderAdminCalendar(); // Vuelve a renderizar la vista para mostrar el evento añadido
            }
        }

        // --- NUEVA FUNCIÓN: Renderiza la vista de solo lectura del calendario ---
        function renderSchoolCalendar() {
            sectionTitle.textContent = '📅 Calendario Escolar';
            schoolCalendar.sort((a, b) => new Date(a.date) - new Date(b.date));

            sectionContent.innerHTML = `
                <div class="dashboard-card non-clickable">
                    <h3>Próximos Eventos</h3>
                    <div class="card-content">
                        ${schoolCalendar.map(item => `
                            <div class="calendar-item ${item.type}">
                                <strong>${item.date}</strong>
                                <p>${item.description}</p>
                            </div>
                        `).join('')}
                    </div>
                </div>
            `;
        }
    </script>
</body>
</html>
